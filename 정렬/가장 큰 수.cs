//// https://school.programmers.co.kr/learn/courses/30/lessons/42746

//문제 설명
//0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.

//예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.

//0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.

//제한 사항
//numbers의 길이는 1 이상 100,000 이하입니다.
//numbers의 원소는 0 이상 1,000 이하입니다.
//정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.
//입출력 예
//numbers	return
//[6, 10, 2]	"6210"
//[3, 30, 34, 5, 9]	"9534330"
//※ 공지 - 2021년 10월 20일 테스트케이스가 추가되었습니다.문제 설명
//0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.

//예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.

//0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.

//제한 사항
//numbers의 길이는 1 이상 100,000 이하입니다.
//numbers의 원소는 0 이상 1,000 이하입니다.
//정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.
//입출력 예
//numbers	return
//[6, 10, 2]	"6210"
//[3, 30, 34, 5, 9]	"9534330"
//※ 공지 - 2021년 10월 20일 테스트케이스가 추가되었습니다.

using System;
using System.Collections.Generic;
using System.Text;

public class Solution
{
    public string solution(int[] numbers)
    {
        string answer = "";
        //List<string> list = new List<string>();
        List<List<string>> listNumber = new List<List<string>>();
        for (int i = 0; i < 10; i++)
        {
            listNumber.Add(new List<string>());
        }

        for (int i = 0; i < numbers.Length; i++)
        {
            string strNum = numbers[i].ToString();
            listNumber[int.Parse(strNum.Substring(0, 1))].Add(strNum);
        }

        for (int i = 0; i < listNumber.Count; i++)
        {
            listNumber[i].Sort((a, b) =>
            {
                if (a == b)
                {
                    return 0;
                }
                string ab = a + b;
                string ba = b + a;
                return ba.CompareTo(ab);
            });
        }

        // StringBuilder 가 빠름
        StringBuilder sb = new StringBuilder();
        for (int i = 9; i >= 0; i--)
        {
            if (listNumber[i].Count > 0)
            {
                for (int j = 0; j < listNumber[i].Count; j++)
                {
                    sb.Append(listNumber[i][j]);
                }
            }
        }

        if (sb.ToString().Substring(0, 1) == "0") // 앞자리가 0이면 모두 0
        {
            return "0";
        }

        return sb.ToString();
    }
}