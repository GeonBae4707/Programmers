//문제 설명
//0 이상의 두 정수가 문자열 a, b로 주어질 때, a + b의 값을 문자열로 return 하는 solution 함수를 작성해 주세요.

//제한사항
//1 ≤ a의 길이 ≤ 100,000
//1 ≤ b의 길이 ≤ 100,000
//a와 b는 숫자로만 이루어져 있습니다.
//a와 b는 정수 0이 아니라면 0으로 시작하지 않습니다.
//입출력 예
//a	b	result
//"582"	"734"	"1316"
//"18446744073709551615"	"287346502836570928366"	"305793246910280479981"
//"0"	"0"	"0"
//입출력 예 설명
//입출력 예 #1

//예제 1번의 a, b는 각각 582, 734이고 582 + 734 = 1316입니다. 따라서 "1316"을 return 합니다.
//입출력 예 #2

//예제 2번의 a, b는 각각 18446744073709551615, 287346502836570928366이고 18446744073709551615 + 287346502836570928366 = 305793246910280479981입니다. 따라서 "305793246910280479981"을 return 합니다.
//입출력 예 #3

//예제 3번의 a, b는 각각 0, 0이고 0 + 0 = 0입니다. 따라서 "0"을 return 합니다.

using System;

public class Solution
{
    public string solution(string a, string b)
    {
        string answer = "";
        string max = a.Length > b.Length ? a : b;
        string min = a.Length > b.Length ? b : a;
        int[] arr = new int[max.Length];
        int head = 0;
        int temp = max.Length - min.Length;

        for (int i = 0; i < max.Length; i++)
        {
            if (i < temp)
            {
                arr[i] = int.Parse(max.Substring(i, 1));
            }
            else
            {

                arr[i] = int.Parse(max.Substring(i, 1)) + int.Parse(min.Substring(i - temp, 1));
            }
        }

        for (int i = arr.Length - 1; i >= 0; i--)
        {
            if (arr[i] >= 10)
            {
                if (i == 0)
                {
                    head += (arr[i] / 10);
                }
                else
                {
                    arr[i - 1] += (arr[i] / 10);
                }
                arr[i] %= 10;
            }
        }

        if (head != 0)
        {
            answer += head;
        }

        for (int i = 0; i < arr.Length; i++)
        {
            answer += arr[i];
        }

        return answer;
    }
}